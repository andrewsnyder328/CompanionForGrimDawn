{"version":3,"sources":["Utils.js","constants.js","App.js","ui.js","serviceWorker.js","index.js"],"names":["getColor","constellation","resources","isSelected","isAvailable","requirements","ascendant","chaos","eldritch","order","primordial","getPointsUsed","data","filter","reduce","current","points","imgBg","ascendantImg","chaosImg","eldritchImg","orderImg","primordialImg","App","props","ConstellationGrid","state","selected","constellations","sort","a","b","name","searchText","toLowerCase","includes","description","pathHistory","pathSize","useDisclosure","isOpen","onOpen","onClose","listener","reset","forEach","item","setState","save","showSummary","onSearch","localStorage","setItem","JSON","stringify","Stack","h","bg","pointsUsed","background","shadow","align","style","position","top","isInline","w","Text","fontSize","px","my","Image","py","pl","src","ml","Flex","justifyContent","Menu","as","Button","rightIcon","p","onClick","InputGroup","pb","height","children","Icon","width","color","Input","variant","focusBorderColor","transition","textAlign","type","placeholder","onKeyPress","e","key","getItem","onChange","target","value","_focus","borderColor","getHeader","SimpleGrid","minChildWidth","spacing","map","PseudoBox","maxW","borderWidth","rounded","overflow","_hover","_active","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","imageSrc","mx","primoridal","rewards","cardLayout","onAddItemClicked","onRemoveItemClicked","Modal","split","el","line","variantColor","mr","cardDetail","find","alert","dependant","tempResources","getDependant","summary","getSummary","parse","obj","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.598fe93a.chunk.js","sourcesContent":["export function getColor(constellation, resources) {\n    const selectedGreen = \"#49ff42\";\n    const availableYellow = \"#fff98a\";\n    const unavailableRed = \"#f01818\";\n\n    if (constellation.isSelected) {\n        return selectedGreen\n    } else {\n        if (isAvailable(constellation.requirements, resources)) {\n            return availableYellow\n        } else {\n            return unavailableRed\n        }\n    }\n}\n\nexport function isAvailable(requirements, resources) {\n    return (requirements.ascendant ? resources.ascendant >= requirements.ascendant : true)\n        && (requirements.chaos ? resources.chaos >= requirements.chaos : true)\n        && (requirements.eldritch ? resources.eldritch >= requirements.eldritch : true)\n        && (requirements.order ? resources.order >= requirements.order : true)\n        && (requirements.primordial ? resources.primordial >= requirements.primordial : true)\n}\n\nexport function sort(constellations, resources) {\n    return constellations.sort((a, b) => (a.name > b.name) ? 1 : -1)\n        .sort((a, b) => (!a.isSelected > b.isSelected) ? 1 : -1)\n        .sort((a, b) => {\n            if (!a.requirements) {\n                return -1\n            } else if (!b.requirements) {\n                return 0\n            } else {\n                return (isAvailable(a.requirements, resources) && !isAvailable(b.requirements, resources) ? -1 : 1)\n            }\n        })\n}\n\nexport function getPointsUsed(data) {\n    return data.filter(constellation => constellation.isSelected).reduce((current, constellation) => current + constellation.points, 0)\n}\n\nexport function getDependant(resources, data, constellation) {\n    let dependant = \"\";\n    let tempResources = {\n        ascendant: resources.ascendant - (constellation.rewards.ascendant ? constellation.rewards.ascendant : 0),\n        chaos: resources.chaos - (constellation.rewards.chaos ? constellation.rewards.chaos : 0),\n        eldritch: resources.eldritch - (constellation.rewards.eldritch ? constellation.rewards.eldritch : 0),\n        order: resources.order - (constellation.rewards.order ? constellation.rewards.order : 0),\n        primordial: resources.primordial - (constellation.rewards.primordial ? constellation.rewards.primordial : 0)\n    };\n    data.filter(constellation => constellation.isSelected).forEach(item => {\n        if (!isAvailable(item.requirements, tempResources)) {\n            dependant = dependant + item.name + \"\\n\"\n        }\n    });\n    return dependant\n}\n\nexport function getSummary(data, resources, pathHistory) {\n    let summary = \"\";\n    summary += \"Ascendant: \" + resources.ascendant + \"\\n\";\n    summary += \"Chaos: \" + resources.chaos + \"\\n\";\n    summary += \"Eldritch: \" + resources.eldritch + \"\\n\";\n    summary += \"Order: \" + resources.order + \"\\n\";\n    summary += \"Primordial: \" + resources.primordial + \"\\n\";\n    summary += \"\\nActive: \\n\";\n    data.filter(item => {\n        return item.isSelected\n    }).forEach((item) => {\n        summary += \"  >\" + item.name + \"\\n\"\n    });\n    summary += \"\\nPoints Used: \" + getPointsUsed(data) + \"\\n\";\n    summary += \"\\nSteps: \\n\";\n    summary += pathHistory;\n    return summary\n}","export const imgBg = `url(https://paint-magic.co.uk/wp-content/uploads/STARRY-NIGHT-bartek-garbowicz-521359-unsplash.jpg)`;\nexport const ascendantImg = \"https://gamepedia.cursecdn.com/grimdawn_gamepedia_en/0/0b/Ascendant_Icon.png?version=657ce21b35d259897b9aee43b98ff757\";\nexport const chaosImg = \"https://gamepedia.cursecdn.com/grimdawn_gamepedia_en/7/79/Chaos_Icon.png?version=de7171257873a00cb01317dc054b0380\";\nexport const eldritchImg = \"https://gamepedia.cursecdn.com/grimdawn_gamepedia_en/5/54/Eldritch_Icon.png?version=1168139a9b53a370aa291734a30b2ca9\";\nexport const orderImg = \"https://gamepedia.cursecdn.com/grimdawn_gamepedia_en/8/84/Order_Icon.png?version=1b5063cb47ed4b8c4cfc9f962fbdf2bc\";\nexport const primordialImg = \"https://gamepedia.cursecdn.com/grimdawn_gamepedia_en/b/b4/Primordial_Icon.png?version=f8082d7c09ae3a3733a28702c388d243\";","import React from 'react';\nimport './App.css';\nimport {\n    Button,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n    PseudoBox,\n    SimpleGrid,\n    Stack,\n    Text,\n    useDisclosure\n} from \"@chakra-ui/core\";\nimport {getColor, getDependant, getPointsUsed, getSummary, sort} from './Utils'\nimport constellations from './constellations'\nimport {cardDetail, cardLayout, getHeader} from \"./ui\";\n\nexport default class App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const save = JSON.parse(localStorage.getItem(\"save\"));\n        if (save) {\n            this.state = {\n                constellations: save.data,\n                resources: save.resources,\n                pathHistory: save.pathHistory,\n                pathSize: save.pathSize\n            }\n        } else {\n            this.state = {\n                constellations: constellations.map(obj => ({\n                    name: obj.name,\n                    points: obj.points,\n                    requirements: obj.requirements,\n                    rewards: obj.rewards,\n                    imageSrc: obj.imageSrc,\n                    description: obj.description,\n                    isSelected: false\n                })),\n                resources: {\n                    ascendant: 0,\n                    chaos: 0,\n                    eldritch: 0,\n                    order: 0,\n                    primordial: 0\n                },\n                pathHistory: \"\",\n                pathSize: 0\n            }\n        }\n    }\n\n    render() {\n        return (\n            <this.ConstellationGrid/>\n        );\n    }\n\n    ConstellationGrid = () => {\n        const resources = this.state.resources;\n        const selected = this.state.selected;\n        const data = sort(this.state.constellations, resources)\n            .filter(constellation => this.state.searchText ? constellation.name.toLowerCase().includes(this.state.searchText) || constellation.description.toLowerCase().includes(this.state.searchText) : true);\n        let pathHistory = this.state.pathHistory;\n        let pathSize = this.state.pathSize;\n        const {isOpen, onOpen, onClose} = useDisclosure();\n\n        const onAddItemClicked = (constellation) => {\n            if (getPointsUsed(data) + constellation.points <= 55) {\n                resources.ascendant += constellation.rewards.ascendant ? constellation.rewards.ascendant : 0;\n                resources.chaos += constellation.rewards.chaos ? constellation.rewards.chaos : 0;\n                resources.eldritch += constellation.rewards.eldritch ? constellation.rewards.eldritch : 0;\n                resources.order += constellation.rewards.order ? constellation.rewards.order : 0;\n                resources.primordial += constellation.rewards.primordial ? constellation.rewards.primordial : 0;\n\n                data.find((item) => {\n                    return item.name === constellation.name\n                }).isSelected = true;\n\n                pathHistory += (this.state.pathSize + 1) + \": Add \" + constellation.name + \"\\n\";\n                pathSize += 1;\n                this.setState({\n                    constellations: data,\n                    resources: resources,\n                    pathHistory: pathHistory,\n                    pathSize: pathSize\n                });\n                save();\n                return true\n            } else {\n                alert(\"You don't have enough points to add this devotion. Remove another one first.\");\n                return false\n            }\n        };\n\n        const onRemoveItemClicked = (constellation) => {\n            const dependant = getDependant(resources, data, constellation);\n            if (dependant === \"\") {\n                resources.ascendant -= constellation.rewards.ascendant ? constellation.rewards.ascendant : 0;\n                resources.chaos -= constellation.rewards.chaos ? constellation.rewards.chaos : 0;\n                resources.eldritch -= constellation.rewards.eldritch ? constellation.rewards.eldritch : 0;\n                resources.order -= constellation.rewards.order ? constellation.rewards.order : 0;\n                resources.primordial -= constellation.rewards.primordial ? constellation.rewards.primordial : 0;\n\n                data.find((item) => {\n                    return item.name === constellation.name\n                }).isSelected = false;\n\n                pathHistory += (this.state.pathSize + 1) + \": Remove \" + constellation.name + \"\\n\";\n                pathSize += 1;\n                this.setState({\n                    constellations: data,\n                    resources: resources,\n                    pathHistory: pathHistory,\n                    pathSize: pathSize\n                });\n                save();\n                return true\n            } else {\n                alert(\"Cannot remove. The following devotions depend on this: \\n\" + dependant);\n                return false\n            }\n        };\n\n        const onReset = () => {\n            data.forEach((item) => {\n                item.isSelected = false\n            });\n            resources.ascendant = 0;\n            resources.chaos = 0;\n            resources.eldritch = 0;\n            resources.order = 0;\n            resources.primordial = 0;\n            pathHistory = \"\";\n            pathSize = 0;\n            this.setState({\n                constellations: data,\n                resources: resources,\n                pathHistory: pathHistory,\n                pathSize: pathSize\n            });\n            save()\n        };\n\n        const showSummary = () => {\n            this.setState({\n                showSummary: true\n            });\n        };\n\n        const onSearch = (searchText) => {\n            this.setState({\n                searchText: searchText\n            })\n        };\n\n        const listener = {\n            reset: onReset,\n            showSummary: showSummary,\n            onSearch: onSearch\n        };\n\n        const save = () => {\n            localStorage.setItem(\"save\",\n                JSON.stringify({\n                    data: data,\n                    resources: resources,\n                    pathHistory: pathHistory,\n                    pathSize: pathSize\n                }))\n        };\n\n        return (\n            <Stack\n                h=\"100%\"\n                bg=\"#a8bdb9\">\n                {\n                    getHeader(this.state.resources, getPointsUsed(data), listener, this.state.searchText)\n                }\n                <SimpleGrid\n                    p={16}\n                    minChildWidth=\"300px\"\n                    spacing=\"20px\">\n                    {\n                        data.map(constellation => {\n                            return (\n                                <PseudoBox\n                                    bg={\n                                        getColor(constellation, this.state.resources)\n                                    }\n                                    maxW=\"sm\"\n                                    borderWidth=\"1px\"\n                                    rounded=\"md\"\n                                    overflow=\"hidden\"\n                                    onClick={() => {\n                                        this.setState({\n                                            constellations: data,\n                                            selected: constellation\n                                        });\n                                        onOpen();\n                                    }}\n                                    _hover={{\n                                        shadow: \"lg\",\n                                    }}\n                                    _active={{\n                                        shadow: \"none\",\n                                    }}>\n                                    {\n                                        cardLayout(constellation)\n                                    }\n                                </PseudoBox>\n                            )\n                        })\n                    }\n                </SimpleGrid>\n                {\n                    cardDetail(selected, isOpen, onClose, resources, onAddItemClicked, onRemoveItemClicked)\n                }\n                <Modal isOpen={this.state.showSummary} onClose={\n                    () => {\n                        this.setState({\n                            showSummary: false\n                        })\n                    }\n                }>\n                    <ModalOverlay/>\n                    <ModalContent>\n                        <ModalHeader>Summary</ModalHeader>\n                        <ModalCloseButton/>\n                        <ModalBody>\n                            {\n                                getSummary(data, resources, this.state.pathHistory).split('\\n').map(line => {\n                                    return (\n                                        <Text px={4}>\n                                            {line}\n                                        </Text>\n                                    )\n                                })\n                            }\n                        </ModalBody>\n\n                        <ModalFooter>\n                            <Button variantColor=\"blue\" mr={3} onClick={\n                                () => {\n                                    this.setState({\n                                        showSummary: false\n                                    })\n                                }\n                            }>\n                                Close\n                            </Button>\n                        </ModalFooter>\n                    </ModalContent>\n                </Modal>\n            </Stack>\n        );\n    }\n}","import {\n    Button,\n    Flex,\n    Icon,\n    Image,\n    Input,\n    InputGroup,\n    InputLeftElement,\n    Menu,\n    MenuButton,\n    MenuItem,\n    MenuList,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n    Stack,\n    Text\n} from \"@chakra-ui/core\";\nimport React from \"react\";\nimport {ascendantImg, chaosImg, eldritchImg, imgBg, orderImg, primordialImg} from \"./constants\";\nimport {isAvailable} from \"./Utils\";\n\nexport function cardLayout(constellation) {\n    return (\n        <Stack>\n            <Image h=\"250px\" style={{\n                backgroundImage: imgBg,\n                backgroundPosition: 'center',\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat'\n            }} src={constellation.imageSrc}/>\n            <Text mx={4}>\n                {constellation.name} (Points: {constellation.points})\n            </Text>\n            {\n                (constellation.requirements.ascendant || constellation.requirements.chaos || constellation.requirements.eldritch || constellation.requirements.order || constellation.requirements.primoridal) &&\n                <Stack isInline w=\"100%\" align={\"center\"}>\n                    <Text pl={4}>\n                        Required:\n                    </Text>\n                    {\n                        constellation.requirements.ascendant &&\n                        <Image w=\"24px\" py={2} pl={4} src={ascendantImg}/>\n                    }\n                    {\n                        constellation.requirements.ascendant &&\n                        <Text>\n                            {constellation.requirements.ascendant}\n                        </Text>\n                    }\n                    {\n                        constellation.requirements.chaos &&\n                        <Image w=\"24px\" py={2} pl={4} src={chaosImg}/>\n                    }\n                    {\n                        constellation.requirements.chaos &&\n                        <Text>\n                            {constellation.requirements.chaos}\n                        </Text>\n                    }\n                    {\n                        constellation.requirements.eldritch &&\n                        <Image w=\"24px\" py={2} pl={4} src={eldritchImg}/>\n                    }\n                    {\n                        constellation.requirements.eldritch &&\n                        <Text>\n                            {constellation.requirements.eldritch}\n                        </Text>\n                    }\n                    {\n                        constellation.requirements.order &&\n                        <Image w=\"24px\" py={2} pl={4} src={orderImg}/>\n                    }\n                    {\n                        constellation.requirements.order &&\n                        <Text>\n                            {constellation.requirements.order}\n                        </Text>\n                    }\n                    {\n                        constellation.requirements.primordial &&\n                        <Image w=\"24px\" py={2} pl={4} src={primordialImg}/>\n                    }\n                    {\n                        constellation.requirements.primordial &&\n                        <Text>\n                            {constellation.requirements.primordial}\n                        </Text>\n                    }\n                </Stack>\n            }\n\n            {\n                (constellation.rewards.ascendant || constellation.rewards.chaos || constellation.rewards.eldritch || constellation.rewards.order || constellation.rewards.primordial) &&\n                <Stack isInline w=\"100%\" align={\"center\"}>\n                    <Text pl={4}>\n                        Rewards:\n                    </Text>\n                    {\n                        constellation.rewards.ascendant &&\n                        <Image w=\"24px\" py={2} pl={4} src={ascendantImg}/>\n                    }\n                    {\n                        constellation.rewards.ascendant &&\n                        <Text>\n                            {constellation.rewards.ascendant}\n                        </Text>\n                    }\n                    {\n                        constellation.rewards.chaos &&\n                        <Image w=\"24px\" py={2} pl={4} src={chaosImg}/>\n                    }\n                    {\n                        constellation.rewards.chaos &&\n                        <Text>\n                            {constellation.rewards.chaos}\n                        </Text>\n                    }\n                    {\n                        constellation.rewards.eldritch &&\n                        <Image w=\"24px\" py={2} pl={4} src={eldritchImg}/>\n                    }\n                    {\n                        constellation.rewards.eldritch &&\n                        <Text>\n                            {constellation.rewards.eldritch}\n                        </Text>\n                    }\n                    {\n                        constellation.rewards.order &&\n                        <Image w=\"24px\" py={2} pl={4} src={orderImg}/>\n                    }\n                    {\n                        constellation.rewards.order &&\n                        <Text>\n                            {constellation.rewards.order}\n                        </Text>\n                    }\n                    {\n                        constellation.rewards.primordial &&\n                        <Image w=\"24px\" py={2} pl={4} src={primordialImg}/>\n                    }\n                    {\n                        constellation.rewards.primordial &&\n                        <Text>\n                            {constellation.rewards.primordial}\n                        </Text>\n                    }\n                </Stack>\n            }\n        </Stack>\n    )\n}\n\nexport function cardDetail(selected, isOpen, onClose, resources, onAddItemClicked, onRemoveItemClicked) {\n    return (\n        selected &&\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay/>\n            <ModalContent>\n                <ModalHeader>{selected.name}</ModalHeader>\n                <ModalCloseButton/>\n                <ModalBody>\n                    {\n                        <Stack>\n                            <Image h=\"250px\" style={{\n                                backgroundImage: imgBg,\n                                backgroundPosition: 'center',\n                                backgroundSize: 'cover',\n                                backgroundRepeat: 'no-repeat'\n                            }} src={selected.imageSrc}/>\n                            {\n                                selected.description.split('\\n').filter(function (el) {\n                                    return el !== \"\";\n                                }).map(line => {\n                                    return (\n                                        <Text px={4}>\n                                            {line}\n                                        </Text>\n                                    )\n                                })\n                            }\n                        </Stack>\n                    }\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button variantColor=\"blue\" mr={3} onClick={onClose}>\n                        Close\n                    </Button>\n\n                    {selected.isSelected &&\n                    <Button variantColor=\"red\" variant=\"ghost\" onClick={() => {\n                        if (onRemoveItemClicked(selected)) {\n                            onClose()\n                        }\n                    }}>Remove</Button>}\n\n                    {isAvailable(selected.requirements, resources) && !selected.isSelected &&\n                    <Button variantColor=\"green\" variant=\"ghost\" onClick={() => {\n                        if (onAddItemClicked(selected)) {\n                            onClose()\n                        }\n                    }}>Add</Button>}\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    )\n}\n\nexport function getHeader(resources, pointsUsed, listener) {\n    return (\n        <Stack background={\"white\"} shadow=\"md\" align={\"center\"} style={{\n            position: \"sticky\",\n            top: \"0\"\n        }}>\n            <Stack isInline w=\"100%\" align={\"center\"}>\n                <Text w=\"100%\" fontSize=\"4xl\" px={8} my={2}>\n                    Companion For Grim Dawn\n                </Text>\n                <Image py={2} pl={4} src={ascendantImg}/>\n                <Text>\n                    {resources.ascendant}\n                </Text>\n                <Image py={2} pl={4} src={chaosImg}/>\n                <Text>\n                    {resources.chaos}\n                </Text>\n                <Image py={2} pl={4} src={eldritchImg}/>\n                <Text>\n                    {resources.eldritch}\n                </Text>\n                <Image py={2} pl={4} src={orderImg}/>\n                <Text>\n                    {resources.order}\n                </Text>\n                <Image py={2} pl={4} src={primordialImg}/>\n                <Text>\n                    {resources.primordial}\n                </Text>\n                <Text w=\"100%\" fontSize=\"4xl\" ml={8} my={2}>\n                    Points Used: {pointsUsed} / 55\n                </Text>\n                <Flex w=\"100%\" px=\"64px\" justifyContent={\"flex-end\"}>\n                    <Menu>\n                        <MenuButton as={Button} rightIcon=\"chevron-down\">\n                            Actions\n                        </MenuButton>\n                        <MenuList>\n                            <MenuItem p={2} onClick={listener.showSummary}>Show Summary</MenuItem>\n                            <MenuItem p={2} onClick={listener.reset}>Reset</MenuItem>\n                        </MenuList>\n                    </Menu>\n                </Flex>\n\n            </Stack>\n            <InputGroup pb={4}>\n                <InputLeftElement\n                    height={16}\n                    px={4}\n                    children={\n                        <Icon\n                            height={6}\n                            width={6}\n                            name=\"search\"\n                            color=\"gray.300\"/>\n                    }\n                />\n\n                <Input\n                    variant=\"filled\"\n                    focusBorderColor=\"null\"\n                    style={{background: \"rgba(0,0,0,0.04)\", transition: \".3s\"}}\n                    textAlign={['left', 'center']}\n                    type=\"text\"\n                    fontSize={32}\n                    placeholder=\"Search...\"\n                    onKeyPress={(e) => {\n                        if (e.key === 'Enter') {\n                            listener.onSearch(localStorage.getItem(\"search\"))\n                        }\n                    }}\n                    onChange={(e) => {\n                        localStorage.setItem(\"search\", e.target.value.toLowerCase())\n                    }}\n                    _focus={{\n                        borderColor: \"null\",\n                        shadow: \"md\",\n                        position: \"relative\",\n                        top: \"-2px\",\n                        width: \"600px\"\n                    }}\n                    height={16}\n                    width={350}/>\n            </InputGroup>\n        </Stack>\n\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {ThemeProvider} from \"@chakra-ui/core\";\n\nReactDOM.render(\n    <ThemeProvider>\n        <App/>\n    </ThemeProvider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}